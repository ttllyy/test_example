// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hmsg.proto

/*
Package hmsg is a generated protocol buffer package.

It is generated from these files:
	hmsg.proto

It has these top-level messages:
	Request
	Response
*/
package hmsg

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message containing the user's name.
type Request struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Age   int32  `protobuf:"varint,2,opt,name=age" json:"age,omitempty"`
	Score int32  `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Request) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Request) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

// The response message containing the greeting.
type Response struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Age   int32  `protobuf:"varint,2,opt,name=age" json:"age,omitempty"`
	Score int32  `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Response) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Response) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func init() {
	proto.RegisterType((*Request)(nil), "hmsg.Request")
	proto.RegisterType((*Response)(nil), "hmsg.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Hmsg service

type HmsgClient interface {
	// Sends a greeting.
	HandlerMsg(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type hmsgClient struct {
	cc *grpc.ClientConn
}

func NewHmsgClient(cc *grpc.ClientConn) HmsgClient {
	return &hmsgClient{cc}
}

func (c *hmsgClient) HandlerMsg(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/hmsg.Hmsg/HandlerMsg", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Hmsg service

type HmsgServer interface {
	// Sends a greeting.
	HandlerMsg(context.Context, *Request) (*Response, error)
}

func RegisterHmsgServer(s *grpc.Server, srv HmsgServer) {
	s.RegisterService(&_Hmsg_serviceDesc, srv)
}

func _Hmsg_HandlerMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HmsgServer).HandlerMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hmsg.Hmsg/HandlerMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HmsgServer).HandlerMsg(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hmsg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hmsg.Hmsg",
	HandlerType: (*HmsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandlerMsg",
			Handler:    _Hmsg_HandlerMsg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hmsg.proto",
}

func init() { proto.RegisterFile("hmsg.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0xc8, 0x2d, 0x4e,
	0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x5c, 0xb9, 0xd8, 0x83, 0x52,
	0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15,
	0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x21, 0x01, 0x2e, 0xe6, 0xc4, 0xf4, 0x54, 0x09, 0x26, 0x05,
	0x46, 0x0d, 0xd6, 0x20, 0x10, 0x53, 0x48, 0x84, 0x8b, 0xb5, 0x38, 0x39, 0xbf, 0x28, 0x55, 0x82,
	0x19, 0x2c, 0x06, 0xe1, 0x28, 0xb9, 0x71, 0x71, 0x04, 0xa5, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7,
	0x52, 0x62, 0x8e, 0x91, 0x31, 0x17, 0x8b, 0x47, 0x6e, 0x71, 0xba, 0x90, 0x36, 0x17, 0x97, 0x47,
	0x62, 0x5e, 0x4a, 0x4e, 0x6a, 0x91, 0x6f, 0x71, 0xba, 0x10, 0xaf, 0x1e, 0xd8, 0xdd, 0x50, 0x87,
	0x4a, 0xf1, 0xc1, 0xb8, 0x10, 0x0b, 0x93, 0xd8, 0xc0, 0x1e, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x13, 0xd1, 0x9a, 0x86, 0xde, 0x00, 0x00, 0x00,
}
